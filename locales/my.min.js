!function(e,a){"object"==typeof exports&&"object"==typeof module?module.exports=a(require("cronstrue")):"function"==typeof define&&define.amd?define("locales/my.min",["cronstrue"],a):"object"==typeof exports?exports["locales/my.min"]=a(require("cronstrue")):e["locales/my.min"]=a(e.cronstrue)}(globalThis,(e=>(()=>{"use strict";var a={93:a=>{a.exports=e}},r={};function t(e){var n=r[e];if(void 0!==n)return n.exports;var u=r[e]={exports:{}};return a[e](u,u.exports,t),u.exports}t.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return t.d(a,{a}),a},t.d=(e,a)=>{for(var r in a)t.o(a,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:a[r]})},t.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};t.r(n);var u=t(93),s=t.n(u),o=n;Object.defineProperty(o,"__esModule",{value:!0}),o.my=void 0;class i{atX0SecondsPastTheMinuteGt20(){return null}atX0MinutesPastTheHourGt20(){return null}commaMonthX0ThroughMonthX1(){return null}commaYearX0ThroughYearX1(){return null}use24HourTimeFormatByDefault(){return!1}anErrorOccuredWhenGeneratingTheExpressionD(){return"Terdapat ralat semasa menjana penerangan ungkapan. Sila periksa sintaks ungkapan cron."}everyMinute(){return"setiap minit"}everyHour(){return"setiap jam"}atSpace(){return"Pada "}everyMinuteBetweenX0AndX1(){return"Setiap minit antara %s dan %s"}at(){return"Pada"}spaceAnd(){return" dan"}everySecond(){return"setiap saat"}everyX0Seconds(){return"setiap %s saat"}secondsX0ThroughX1PastTheMinute(){return"saat ke %s hingga %s selepas minit"}atX0SecondsPastTheMinute(){return"pada %s saat selepas minit"}everyX0Minutes(){return"setiap %s minit"}minutesX0ThroughX1PastTheHour(){return"minit ke %s hingga %s selepas jam"}atX0MinutesPastTheHour(){return"pada %s minit selepas jam"}everyX0Hours(){return"setiap %s jam"}betweenX0AndX1(){return"antara %s dan %s"}atX0(){return"pada %s"}commaEveryDay(){return", setiap hari"}commaEveryX0DaysOfTheWeek(){return", setiap %s hari dalam minggu"}commaX0ThroughX1(){return", %s hingga %s"}commaAndX0ThroughX1(){return", dan %s hingga %s"}first(){return"pertama"}second(){return"kedua"}third(){return"ketiga"}fourth(){return"keempat"}fifth(){return"kelima"}commaOnThe(){return", pada "}spaceX0OfTheMonth(){return" %s pada bulan"}lastDay(){return"hari terakhir"}commaOnTheLastX0OfTheMonth(){return", pada %s terakhir bulan"}commaOnlyOnX0(){return", hanya pada %s"}commaAndOnX0(){return", dan pada %s"}commaEveryX0Months(){return", setiap bulan %s"}commaOnlyInX0(){return", hanya pada %s"}commaOnTheLastDayOfTheMonth(){return", pada hari terakhir bulan"}commaOnTheLastWeekdayOfTheMonth(){return", pada minggu terakhir bulan"}commaDaysBeforeTheLastDayOfTheMonth(){return", %s hari sebelum hari terakhir bulan"}firstWeekday(){return"hari pertama minggu bekerja"}weekdayNearestDayX0(){return"hari bekerja yang terdekat dengan %s"}commaOnTheX0OfTheMonth(){return", pada %s bulan"}commaEveryX0Days(){return", setiap %s hari"}commaBetweenDayX0AndX1OfTheMonth(){return", antara hari %s dan %s dalam bulan"}commaOnDayX0OfTheMonth(){return", pada hari %s dalam bulan"}commaEveryHour(){return", setiap jam"}commaEveryX0Years(){return", setiap %s tahun"}commaStartingX0(){return", bermula %s"}daysOfTheWeek(){return["Ahad","Isnin","Selasa","Rabu","Khamis","Jumaat","Sabtu"]}monthsOfTheYear(){return["Januari","Februari","Mac","April","Mei","Jun","Julai","Ogos","September","Oktober","November","Disember"]}}return o.my=i,s().locales.my=new i,n})()));