!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r(require("cronstrue")):"function"==typeof define&&define.amd?define("locales/de.min",["cronstrue"],r):"object"==typeof exports?exports["locales/de.min"]=r(require("cronstrue")):e["locales/de.min"]=r(e.cronstrue)}(globalThis,(e=>(()=>{"use strict";var r={93:r=>{r.exports=e}},n={};function t(e){var a=n[e];if(void 0!==a)return a.exports;var u=n[e]={exports:{}};return r[e](u,u.exports,t),u.exports}t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};t.r(a);var u=t(93),s=t.n(u),o=a;Object.defineProperty(o,"__esModule",{value:!0}),o.de=void 0;class d{atX0SecondsPastTheMinuteGt20(){return null}atX0MinutesPastTheHourGt20(){return null}commaMonthX0ThroughMonthX1(){return null}commaYearX0ThroughYearX1(){return null}use24HourTimeFormatByDefault(){return!0}everyMinute(){return"jede Minute"}everyHour(){return"jede Stunde"}anErrorOccuredWhenGeneratingTheExpressionD(){return"Beim Generieren der Ausdrucksbeschreibung ist ein Fehler aufgetreten. Überprüfen Sie die Syntax des Cron-Ausdrucks."}atSpace(){return"Um "}everyMinuteBetweenX0AndX1(){return"Jede Minute zwischen %s und %s"}at(){return"Um"}spaceAnd(){return" und"}everySecond(){return"Jede Sekunde"}everyX0Seconds(){return"alle %s Sekunden"}secondsX0ThroughX1PastTheMinute(){return"Sekunden %s bis %s"}atX0SecondsPastTheMinute(){return"bei Sekunde %s"}everyX0Minutes(){return"alle %s Minuten"}minutesX0ThroughX1PastTheHour(){return"Minuten %s bis %s"}atX0MinutesPastTheHour(){return"bei Minute %s"}everyX0Hours(){return"alle %s Stunden"}betweenX0AndX1(){return"zwischen %s und %s"}atX0(){return"um %s"}commaEveryDay(){return", jeden Tag"}commaEveryX0DaysOfTheWeek(){return", alle %s Tage der Woche"}commaX0ThroughX1(){return", %s bis %s"}commaAndX0ThroughX1(){return", und %s bis %s"}first(){return"ersten"}second(){return"zweiten"}third(){return"dritten"}fourth(){return"vierten"}fifth(){return"fünften"}commaOnThe(){return", am "}spaceX0OfTheMonth(){return" %s des Monats"}lastDay(){return"der letzte Tag"}commaOnTheLastX0OfTheMonth(){return", am letzten %s des Monats"}commaOnlyOnX0(){return", nur jeden %s"}commaAndOnX0(){return", und jeden %s"}commaEveryX0Months(){return", alle %s Monate"}commaOnlyInX0(){return", nur im %s"}commaOnTheLastDayOfTheMonth(){return", am letzten Tag des Monats"}commaOnTheLastWeekdayOfTheMonth(){return", am letzten Werktag des Monats"}commaDaysBeforeTheLastDayOfTheMonth(){return", %s tage vor dem letzten Tag des Monats"}firstWeekday(){return"ersten Werktag"}weekdayNearestDayX0(){return"Werktag am nächsten zum %s Tag"}commaOnTheX0OfTheMonth(){return", am %s des Monats"}commaEveryX0Days(){return", alle %s Tage"}commaBetweenDayX0AndX1OfTheMonth(){return", zwischen Tag %s und %s des Monats"}commaOnDayX0OfTheMonth(){return", an Tag %s des Monats"}commaEveryX0Years(){return", alle %s Jahre"}commaStartingX0(){return", beginnend %s"}daysOfTheWeek(){return["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"]}monthsOfTheYear(){return["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]}}return o.de=d,s().locales.de=new d,a})()));