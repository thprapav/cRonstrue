!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r(require("cronstrue")):"function"==typeof define&&define.amd?define("locales/id.min",["cronstrue"],r):"object"==typeof exports?exports["locales/id.min"]=r(require("cronstrue")):e["locales/id.min"]=r(e.cronstrue)}(globalThis,(e=>(()=>{"use strict";var r={93:r=>{r.exports=e}},a={};function t(e){var n=a[e];if(void 0!==n)return n.exports;var s=a[e]={exports:{}};return r[e](s,s.exports,t),s.exports}t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var a in r)t.o(r,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:r[a]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};t.r(n);var s=t(93),u=t.n(s),i=n;Object.defineProperty(i,"__esModule",{value:!0}),i.id=void 0;class o{atX0SecondsPastTheMinuteGt20(){return null}atX0MinutesPastTheHourGt20(){return null}commaMonthX0ThroughMonthX1(){return null}commaYearX0ThroughYearX1(){return null}use24HourTimeFormatByDefault(){return!0}anErrorOccuredWhenGeneratingTheExpressionD(){return"Terjadi kesalahan saat membuat deskripsi ekspresi. Periksa sintaks ekspresi cron."}everyMinute(){return"setiap menit"}everyHour(){return"setiap jam"}atSpace(){return"Pada "}everyMinuteBetweenX0AndX1(){return"Setiap menit diantara %s dan %s"}at(){return"Pada"}spaceAnd(){return" dan"}everySecond(){return"setiap detik"}everyX0Seconds(){return"setiap %s detik"}secondsX0ThroughX1PastTheMinute(){return"detik ke %s sampai %s melewati menit"}atX0SecondsPastTheMinute(){return"pada %s detik lewat satu menit"}everyX0Minutes(){return"setiap %s menit"}minutesX0ThroughX1PastTheHour(){return"menit ke %s sampai %s melewati jam"}atX0MinutesPastTheHour(){return"pada %s menit melewati jam"}everyX0Hours(){return"setiap %s jam"}betweenX0AndX1(){return"diantara %s dan %s"}atX0(){return"pada %s"}commaEveryDay(){return", setiap hari"}commaEveryX0DaysOfTheWeek(){return", setiap hari %s  dalam seminggu"}commaX0ThroughX1(){return", %s sampai %s"}commaAndX0ThroughX1(){return", dan %s sampai %s"}first(){return"pertama"}second(){return"kedua"}third(){return"ketiga"}fourth(){return"keempat"}fifth(){return"kelima"}commaOnThe(){return", di "}spaceX0OfTheMonth(){return" %s pada bulan"}lastDay(){return"hari terakhir"}commaOnTheLastX0OfTheMonth(){return", pada %s terakhir bulan ini"}commaOnlyOnX0(){return", hanya pada %s"}commaAndOnX0(){return", dan pada %s"}commaEveryX0Months(){return", setiap bulan %s "}commaOnlyInX0(){return", hanya pada %s"}commaOnTheLastDayOfTheMonth(){return", pada hari terakhir bulan ini"}commaOnTheLastWeekdayOfTheMonth(){return", pada hari kerja terakhir setiap bulan"}commaDaysBeforeTheLastDayOfTheMonth(){return", %s hari sebelum hari terakhir setiap bulan"}firstWeekday(){return"hari kerja pertama"}weekdayNearestDayX0(){return"hari kerja terdekat %s"}commaOnTheX0OfTheMonth(){return", pada %s bulan ini"}commaEveryX0Days(){return", setiap %s hari"}commaBetweenDayX0AndX1OfTheMonth(){return", antara hari %s dan %s dalam sebulan"}commaOnDayX0OfTheMonth(){return", pada hari %s dalam sebulan"}commaEveryHour(){return", setiap jam"}commaEveryX0Years(){return", setiap %s tahun"}commaStartingX0(){return", mulai pada %s"}daysOfTheWeek(){return["Minggu","Senin","Selasa","Rabu","Kamis","Jumat","Sabtu"]}monthsOfTheYear(){return["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"]}}return i.id=o,u().locales.id=new o,n})()));