!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r(require("cronstrue")):"function"==typeof define&&define.amd?define("locales/hu.min",["cronstrue"],r):"object"==typeof exports?exports["locales/hu.min"]=r(require("cronstrue")):e["locales/hu.min"]=r(e.cronstrue)}(globalThis,(e=>(()=>{"use strict";var r={93:r=>{r.exports=e}},n={};function t(e){var a=n[e];if(void 0!==a)return a.exports;var s=n[e]={exports:{}};return r[e](s,s.exports,t),s.exports}t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};t.r(a);var s=t(93),o=t.n(s),u=a;Object.defineProperty(u,"__esModule",{value:!0}),u.hu=void 0;class m{atX0SecondsPastTheMinuteGt20(){return null}atX0MinutesPastTheHourGt20(){return null}commaMonthX0ThroughMonthX1(){return null}commaYearX0ThroughYearX1(){return null}use24HourTimeFormatByDefault(){return!0}anErrorOccuredWhenGeneratingTheExpressionD(){return"Hiba történt a kifejezésleírás generálásakor. Ellenőrizze a cron kifejezés szintaxisát."}everyMinute(){return"minden percben"}everyHour(){return"minden órában"}atSpace(){return"Ekkor: "}everyMinuteBetweenX0AndX1(){return"percenként %s és %s között"}at(){return"Ekkor:"}spaceAnd(){return" és"}everySecond(){return"minden másodpercben"}everyX0Seconds(){return"%s másodpercenként"}secondsX0ThroughX1PastTheMinute(){return"%s. másodpercben %s perc után"}atX0SecondsPastTheMinute(){return"%s. másodpercben"}everyX0Minutes(){return"minden %s. percben"}minutesX0ThroughX1PastTheHour(){return"%s. percben %s óra után"}atX0MinutesPastTheHour(){return"%s. percben"}everyX0Hours(){return"minden %s órában"}betweenX0AndX1(){return"%s és %s között"}atX0(){return"ekkor %s"}commaEveryDay(){return", minden nap"}commaEveryX0DaysOfTheWeek(){return", a hét minden %s napján"}commaX0ThroughX1(){return", %s - %s"}commaAndX0ThroughX1(){return", és %s - %s"}first(){return"első"}second(){return"második"}third(){return"harmadik"}fourth(){return"negyedik"}fifth(){return"ötödik"}commaOnThe(){return", "}spaceX0OfTheMonth(){return" %s a hónapban"}lastDay(){return"az utolsó nap"}commaOnTheLastX0OfTheMonth(){return", a hónap utolsó %s"}commaOnlyOnX0(){return", csak ekkor: %s"}commaAndOnX0(){return", és %s"}commaEveryX0Months(){return", minden %s hónapban"}commaOnlyInX0(){return", csak ekkor: %s"}commaOnTheLastDayOfTheMonth(){return", a hónap utolsó napján"}commaOnTheLastWeekdayOfTheMonth(){return", a hónap utolsó hétköznapján"}commaDaysBeforeTheLastDayOfTheMonth(){return", %s nappal a hónap utolsó napja előtt"}firstWeekday(){return"első hétköznap"}weekdayNearestDayX0(){return"hétköznap legközelebbi nap %s"}commaOnTheX0OfTheMonth(){return", a hónap %s"}commaEveryX0Days(){return", %s naponként"}commaBetweenDayX0AndX1OfTheMonth(){return", a hónap %s és %s napja között"}commaOnDayX0OfTheMonth(){return", a hónap %s napján"}commaEveryHour(){return", minden órában"}commaEveryX0Years(){return", %s évente"}commaStartingX0(){return", %s kezdettel"}daysOfTheWeek(){return["vasárnap","hétfő","kedd","szerda","csütörtök","péntek","szombat"]}monthsOfTheYear(){return["január","február","március","április","május","június","július","augusztus","szeptember","október","november","december"]}}return u.hu=m,o().locales.hu=new m,a})()));