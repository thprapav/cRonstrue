!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r(require("cronstrue")):"function"==typeof define&&define.amd?define("locales/en.min",["cronstrue"],r):"object"==typeof exports?exports["locales/en.min"]=r(require("cronstrue")):e["locales/en.min"]=r(e.cronstrue)}(globalThis,(e=>(()=>{"use strict";var r={93:r=>{r.exports=e}},t={};function n(e){var o=t[e];if(void 0!==o)return o.exports;var a=t[e]={exports:{}};return r[e](a,a.exports,n),a.exports}n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};n.r(o);var a=n(93),s=n.n(a),u=o;Object.defineProperty(u,"__esModule",{value:!0}),u.en=void 0;class h{atX0SecondsPastTheMinuteGt20(){return null}atX0MinutesPastTheHourGt20(){return null}commaMonthX0ThroughMonthX1(){return null}commaYearX0ThroughYearX1(){return null}use24HourTimeFormatByDefault(){return!1}anErrorOccuredWhenGeneratingTheExpressionD(){return"An error occurred when generating the expression description. Check the cron expression syntax."}everyMinute(){return"every minute"}everyHour(){return"every hour"}atSpace(){return"At "}everyMinuteBetweenX0AndX1(){return"Every minute between %s and %s"}at(){return"At"}spaceAnd(){return" and"}everySecond(){return"every second"}everyX0Seconds(){return"every %s seconds"}secondsX0ThroughX1PastTheMinute(){return"seconds %s through %s past the minute"}atX0SecondsPastTheMinute(){return"at %s seconds past the minute"}everyX0Minutes(){return"every %s minutes"}minutesX0ThroughX1PastTheHour(){return"minutes %s through %s past the hour"}atX0MinutesPastTheHour(){return"at %s minutes past the hour"}everyX0Hours(){return"every %s hours"}betweenX0AndX1(){return"between %s and %s"}atX0(){return"at %s"}commaEveryDay(){return", every day"}commaEveryX0DaysOfTheWeek(){return", every %s days of the week"}commaX0ThroughX1(){return", %s through %s"}commaAndX0ThroughX1(){return", %s through %s"}first(){return"first"}second(){return"second"}third(){return"third"}fourth(){return"fourth"}fifth(){return"fifth"}commaOnThe(){return", on the "}spaceX0OfTheMonth(){return" %s of the month"}lastDay(){return"the last day"}commaOnTheLastX0OfTheMonth(){return", on the last %s of the month"}commaOnlyOnX0(){return", only on %s"}commaAndOnX0(){return", and on %s"}commaEveryX0Months(){return", every %s months"}commaOnlyInX0(){return", only in %s"}commaOnTheLastDayOfTheMonth(){return", on the last day of the month"}commaOnTheLastWeekdayOfTheMonth(){return", on the last weekday of the month"}commaDaysBeforeTheLastDayOfTheMonth(){return", %s days before the last day of the month"}firstWeekday(){return"first weekday"}weekdayNearestDayX0(){return"weekday nearest day %s"}commaOnTheX0OfTheMonth(){return", on the %s of the month"}commaEveryX0Days(){return", every %s days"}commaBetweenDayX0AndX1OfTheMonth(){return", between day %s and %s of the month"}commaOnDayX0OfTheMonth(){return", on day %s of the month"}commaEveryHour(){return", every hour"}commaEveryX0Years(){return", every %s years"}commaStartingX0(){return", starting %s"}daysOfTheWeek(){return["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]}monthsOfTheYear(){return["January","February","March","April","May","June","July","August","September","October","November","December"]}}return u.en=h,s().locales.en=new h,o})()));